function FIS_data_files = FIS_getFiles(folder_name, mode)
  % Find FIS data in directory "folder_name" and return the corresponding filenames in a structure.
  
  FIS_data_files =  struct();
  
  if ~exist('folder_name', 'var')
    folder_name = uigetdir();
  end

  setup_options = {'VIS', 'IR'};
  data_file_type_options = {'Single file for point', 'Single file for line'};
  scan_type_options = {'Line scan', 'Full scan'};

  if ~exist('mode', 'var')
    mode.setup = setup_options{2};
    mode.data_file_type = data_file_type_options{1};
    mode.scan_type = scan_type_options{2};
  end
  
  %fprintf(1, 'folder_name = %s\n', folder_name);
  
  FIS_data_files.folder_name = folder_name;
  
  % find the log files:
  measurement_types = {'Sample', 'Mirror', 'DarkBackground', 'NosampleBackground'};
  for measurement_type = measurement_types
    L = dir(fullfile(folder_name, [measurement_type{:}, '*log.txt']));
    for idx = 1:length(L)
      [tokens, matches] = regexp(L(idx).name, [measurement_type{:}, '(.*?)log\.txt'], 'tokens', 'match');
      FILENAME = tokens{1}{1};
      
      % The 'folder' field does not exist in listings generated by Matlab 2015.
      if isfield(L(idx), 'folder')
        FOLDER = L(idx).folder;
      else
        FOLDER = folder_name;
      end
      
      PREFIX = sprintf('%s%s', measurement_type{:}, FILENAME);
      logfile = fullfile(FOLDER, sprintf('%s%s', PREFIX, 'log.txt'));
      FIS_info = FIS_readLogFile(logfile);
      FIS_data_files.(measurement_type{:}).FIS_info = FIS_info;
      position = FIS_info.Initial_Position_mm:FIS_info.Spatial_Resolution_mm:FIS_info.Final_position_mm;
      FIS_data_files.(measurement_type{:}).position = position;
      FIS_data_files.(measurement_type{:}).files = {};
      for pos_idx = 1:length(position)
        f = fullfile(FOLDER, sprintf('%s%d.txt', PREFIX, round(1000*position(pos_idx))));
        if ~exist(f, 'file')
            warning('File not found!: %s', f);
            if ~java.io.File(f).exists()
                % cf: https://stackoverflow.com/questions/3938687/matlab-exist-returns-0-for-a-file-that-definitely-exists
                error('File not found!: %s', f);
            end
        end
        FIS_data_files.(measurement_type{:}).files{end+1} = f;
      end
    end
  end
  
end
